#
# Software Name : free5gc-helm
#
{{- with .Values.nef }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "free5gc-nef.fullname" $ }}-{{ .name }}
  labels:
    {{- include "free5gc-nef.labels" $ | nindent 4 }}
    project: {{ $.Values.global.projectName }}
    nf: {{ .name }}
spec:
  {{- if not .autoscaling.enabled }}
  replicas: {{ .replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "free5gc-nef.selectorLabels" $ | nindent 6 }}
      project: {{ $.Values.global.projectName }}
      nf: {{ .name }}
  template:
    metadata:
      annotations:
        {{- include "free5gc-nef.nefAnnotations" $ | nindent 8 }}
        checksum/config: {{ include (print $.Template.BasePath "/nef-configmap.yaml") $ | sha256sum }}
      labels:
        {{- include "free5gc-nef.selectorLabels" $ | nindent 8 }}
        project: {{ $.Values.global.projectName }}
        nf: {{ .name }}
    spec:
      imagePullSecrets:
        {{- toYaml .imagePullSecrets | nindent 8 }}
      securityContext:
        {{- toYaml .podSecurityContext | nindent 8 }}
      initContainers:
      - name: wait-nrf
        {{- with $.Values.initcontainers.curl }}
        image: {{ .registry }}/{{ .image }}:{{ .tag }}
        {{- end }}
        env:
        - name: DEPENDENCIES
          value: {{ $.Values.global.sbi.scheme }}://{{ $.Values.global.nrf.service.name }}:{{ $.Values.global.nrf.service.port }}
        command: ['sh', '-c', 'set -x; for dependency in $DEPENDENCIES; do while [ $(curl --insecure --connect-timeout 1 -s -o /dev/null -w "%{http_code}" $dependency) -ne 200 ]; do echo waiting for dependencies; sleep 1; done; done;']
      containers:
      - name: {{ .name }}
        image: {{ .image.name }}:{{ .image.tag | default $.Chart.AppVersion }}
        imagePullPolicy: {{ .image.pullPolicy }}
        securityContext:
            {{- toYaml .securityContext | nindent 12 }}
        ports:
        - containerPort: {{ .service.port }}
        command: ["./nef"]
        args: ["-c", "./config/nefcfg.yaml"]
        env:
          - name: GIN_MODE
            value: release
        {{- if .readinessProbe.enabled }}
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - "grep -q ':0050 .* 0A ' /proc/net/tcp || grep -q ':0050 .* 0A ' /proc/net/tcp6"
          initialDelaySeconds: {{ .readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .readinessProbe.failureThreshold }}
          successThreshold: {{ .readinessProbe.successThreshold }}
        {{- end }}
        volumeMounts:
        - mountPath: {{ .volume.mount }}
          name: {{ include "free5gc-nef.fullname" $ }}-volume
        - mountPath: {{ .volume.tlsmount }}
          name: {{ include "free5gc-nef.fullname" $ }}-empty-volume
        - mountPath: {{ .volume.certmount }}
          name: {{ include "free5gc-nef.fullname" $ }}-cert-pvc
        resources:
            {{- toYaml .resources | nindent 12 }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      nodeSelector:
        {{- toYaml .nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .affinity | nindent 8 }}
      tolerations:
        {{- toYaml .tolerations | nindent 8 }}

      volumes:
      - name: {{ include "free5gc-nef.fullname" $ }}-volume
        projected:
          sources:
          - configMap:
              name: {{ include "free5gc-nef.fullname" $ }}-configmap
      - name: {{ include "free5gc-nef.fullname" $ }}-empty-volume
        emptyDir: {}
      - name: {{ include "free5gc-nef.fullname" $ }}-cert-pvc
        persistentVolumeClaim:
          claimName: cert-pvc
{{- end }}
