#
# Software Name : towards5gs-helm
# SPDX-FileCopyrightText: Copyright (c) 2021 Orange
# SPDX-License-Identifier: Apache-2.0
#
# This software is distributed under the Apache License 2.0,
# the text of which is available at todo
# or see the "LICENSE" file for more details.
#
# Author: Abderaouf KHICHANE, Ilhem FAJJARI, Ayoub BOUSSELMI, Ian Chen
# Software description: An open-source project providing Helm charts to deploy 5G components (Core + RAN) on top of Kubernetes
#
# Default values for free5gcControlPlane chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

global:
  projectName: free5gc
  nrf:
    service:
      name: nrf-nnrf
      type: ClusterIP
      port: "8000"
      nodePort: "30800"
  sbi:
    scheme: http

initcontainers:
  curl:
    registry: curlimages
    image: curl
    tag: "8.7.1"
  busybox:
    image: busybox
    tag: "1.32.0"

# This section can be used to override the default values in the MongoDB chart (remember MongoDB is a subchart of the free5gcControlplane chart since control plane NFs rely on it.
mongodb:
  service:
    name: mongodb
    type: ClusterIP
    port: 27017
    nodePort: "30017"

pcf:
  name: pcf
  replicaCount: 1
  image:
    name: free5gc/pcf
    tag: v4.0.1
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 80
  volume:
    mount: /free5gc/config/
    tlsmount: /free5gc/config/TLS
    certmount: /free5gc/cert
  podAnnotations: {}
    # additional annotations
  imagePullSecrets: []
  podSecurityContext: {}
  securityContext: {}
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  readinessProbe:
    enabled: true
    exec:
      command:
        - /bin/sh
        - -c
        - "grep -q ':0050 .* 0A ' /proc/net/tcp || grep -q ':0050 .* 0A ' /proc/net/tcp6"
    initialDelaySeconds: 10
    periodSeconds: 1
    timeoutSeconds: 1
    failureThreshold:  40
    successThreshold: 1
  livenessProbe:
    enabled: true
    exec:
      command:
        - /bin/sh
        - -c
        - "grep -q ':0050 .* 0A ' /proc/net/tcp || grep -q ':0050 .* 0A ' /proc/net/tcp6"
    initialDelaySeconds: 50
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  nodeSelector: {}
  tolerations: []
  affinity: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: []
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  configuration:
    serviceList: |-
        - serviceName: npcf-am-policy-control
        - serviceName: npcf-smpolicycontrol
          suppFeat: 3fff
        - serviceName: npcf-bdtpolicycontrol
        - serviceName: npcf-policyauthorization
          suppFeat: 3
        - serviceName: npcf-eventexposure
        - serviceName: npcf-ue-policy-control
    configuration: |-
      pcfName: PCF
      timeFormat: 2019-01-02 15:04:05
      defaultBdtRefId: BdtPolicyId-
      locality: area1
    # the kind of log output
      # debugLevel: how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      # ReportCaller: enable the caller report or not, value: true or false
    logger: # log output setting
      enable: true # true or false
      level: info # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      reportCaller: false # enable the caller report or not, value: true or false
