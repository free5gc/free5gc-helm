
{{- /*
Generate one Secret per cert pair found under 'cert/'.
Secret name: <release>-<nf>-tls-secret
Each Secret will contain two keys:
  <nf>.pem  -> base64(pem content)
  <nf>.key  -> base64(key content)  (if key exists)
*/ -}}
{{- $pemFiles := .Files.Glob "cert/*.pem" }}
{{- range $path, $_ := $pemFiles }}
  {{- $fname := base $path }}
  {{- $nf := trimSuffix ".pem" $fname }}
  {{- $pem := $.Files.Get $path }}
  {{- $keyPath := printf "cert/%s.key" $nf }}
  {{- $key := $.Files.Get $keyPath }}
{{- if or (ne $pem "") (ne $key "") }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-%s-tls-secret" $.Release.Name $nf }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/name: {{ $nf }}
type: Opaque
data:
  {{ $nf }}.pem: {{ $pem | b64enc | quote }}
  {{ $nf }}.key: {{ $key | b64enc | quote }}
{{- end }}
{{- end }}